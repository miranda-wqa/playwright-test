name: 🎭 GitHub Pages - Multiple Jobs

on:
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  tests:
    name: 🧪 Run Playwright Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    outputs:
      report_dir: ${{ steps.report-dir.outputs.name }}

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 🚠 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: 🔧 Install dependencies
        run: npm ci

      - name: 🌐 Install Playwright
        run: npx playwright install --with-deps

      - name: 🧪 Run Playwright Tests
        run: npx playwright test --project=chromium -g "test-1.spec.ts"
        continue-on-error: true

      - name: 📁 Set Report Folder Name
        id: report-dir
        run: |
          REPORT_DIR=$(TZ="America/New_York" date +'%Y-%m-%d_%H-%M-%S')_${{ github.run_id }}
          echo "name=$REPORT_DIR" >> $GITHUB_OUTPUT

      - name: 📤 Package report
        run: |
          mkdir -p package/${{ steps.report-dir.outputs.name }}
          cp -r test-reports/monocart/* package/${{ steps.report-dir.outputs.name }} || echo "No reports to copy"

      - name: 📦 Upload Report Artifact
        uses: actions/upload-artifact@v4
        with:
          name: report-folder
          path: package/

  deploy:
    name: 🚀 Deploy Report to GitHub Pages
    runs-on: ubuntu-latest
    needs: tests

    steps:
      - name: 📥 Checkout Repo
        uses: actions/checkout@v4

      - name: 📥 Checkout existing gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages
        continue-on-error: true

      - name: 📂 Create gh-pages directory if needed
        run: mkdir -p gh-pages

      - name: 📦 Download Report Artifact
        uses: actions/download-artifact@v4
        with:
          name: report-folder
          path: gh-pages

      - name: 📂 List files in gh-pages
        run: ls -R gh-pages

      - name: 📑 Generate index page
        run: |
          cd gh-pages
      
          REPORT_DIR="${{ needs.tests.outputs.report_dir }}"
      
          # Create index.html with all reports
          cat > index.html <<EOF
          <!DOCTYPE html>
          <html lang="en">
          <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Playwright Test Reports</title>
            <style>
              body { font-family: 'Nunito', sans-serif; max-width: 800px; margin: 0 auto; padding: 20px; }
              h1 { color: #333; }
              ul { list-style-type: none; padding: 0; }
              li { margin: 10px 0; padding: 10px; border: 1px solid #eee; border-radius: 5px; }
              a { color: #0366d6; text-decoration: none; font-weight: bold; }
              .date { color: #666; font-size: 0.9em; }
              .latest { background-color: #f0fff0; border-left: 5px solid #2cbe4e; }
            </style>
          </head>
          <body>
            <h1>Playwright Test Reports</h1>
            <p>Select a test run to view its report:</p>
            <ul>
          EOF
      
          # Generate list of reports, sorted by directory name (newest first)
            for dir in \$(ls -d */ | sort -r); do
            dir_name=\${dir%/}
            if [ "\$dir_name" = "\$REPORT_DIR" ]; then
              echo "<li class=\"latest\"><a href=\"./\$dir_name/index.html\">Run: \$dir_name<span class=\"date\">Generated on \$$begin:math:text$TZ=\\"America/New_York\\" date '+%A, %B %d, %Y at %H:%M'$end:math:text$</span></a></li>" >> index.html
            else
              timestamp=\${dir_name%_*}
              readable_date=\$(TZ="America/New_York" date -d "\${timestamp//_/ }" '+%A, %B %d, %Y at %H:%M' 2>/dev/null || echo "Unknown date")
              echo "<li><a href=\"./\$dir_name/index.html\">Run: \$dir_name<span class=\"date\">Generated on \$readable_date</span></a></li>" >> index.html
            fi
          done
      
          # Close the HTML
          cat >> index.html <<EOF
            </ul>
          </body>
          </html>
          EOF

      - name: 🚀 Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: gh-pages
          publish_branch: gh-pages
          enable_jekyll: false
          keep_files: true

      - name: 🔗 Add report URL to summary
        run: |
          echo "## ✅ Test Report Available" >> $GITHUB_STEP_SUMMARY
          echo "[Open Latest Report 🔍](https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/${{ needs.tests.outputs.report_dir }}/)" >> $GITHUB_STEP_SUMMARY
          echo "[View All Reports](https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/)" >> $GITHUB_STEP_SUMMARY

          