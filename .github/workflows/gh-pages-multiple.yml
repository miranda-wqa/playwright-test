# Using gh-pages for deployment to pages
# Using Multiple workflow jobs

name: 🎭 GitHub Pages - Multiple Jobs

on:
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  tests:
    name: 🧪 Run Playwright Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    outputs:
      report_dir: ${{ steps.report-dir.outputs.name }}

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 🚠 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: 🔧 Install dependencies
        run: npm ci

      - name: 🌐 Install Playwright
        run: npx playwright install --with-deps

      - name: 🧪 Run Playwright Tests
        run: npx playwright test --project=chromium -g "test-1.spec.ts"
        continue-on-error: true

      - name: 📁 Set Report Folder Name
        id: report-dir
        run: |
          REPORT_DIR=$(TZ="America/New_York" date +'%Y-%m-%d_%H-%M-%S')_${{ github.run_id }}
          echo "name=$REPORT_DIR" >> $GITHUB_OUTPUT

      - name: 📤 Package report
        run: |
          mkdir -p package/${{ steps.report-dir.outputs.name }}
          cp -r test-reports/monocart/* package/${{ steps.report-dir.outputs.name }} || echo "No reports to copy"

      - name: 📦 Upload Report Artifact
        uses: actions/upload-artifact@v4
        with:
          name: report-folder
          path: package/

  deploy:
    name: 🚀 Deploy Report to GitHub Pages
    runs-on: ubuntu-latest
    needs: tests

    steps:
      - name: 📥 Checkout Repo
        uses: actions/checkout@v4

      - name: 📥 Checkout existing gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages
        continue-on-error: true

      - name: 📂 Create gh-pages directory if needed
        run: mkdir -p gh-pages

      - name: 📦 Download Report Artifact
        uses: actions/download-artifact@v4
        with:
          name: report-folder
          path: gh-pages

      - name: 📂 List files in gh-pages
        run: ls -R gh-pages

      - name: 📑 Generate index page
        run: |
          cd gh-pages
      
          # Use the output from the previous job
            REPORT_DIR="${{ needs.tests.outputs.report_dir }}"
            
            # Copy the template file to the deployment directory
            cp ../.github/workflows/report-index-template.html ./index.html.template
            
            # Generate the list of directories in a variable
            DIRS=$(find . -maxdepth 1 -type d -name "20*" | sort -r)

            # Start building the REPORT_ITEMS
            REPORT_ITEMS=""

            # Add latest run first
            LATEST_ITEM="<li class=\"latest\"><a href=\"./$REPORT_DIR/index.html\">Run: $REPORT_DIR <span class=\"date\">Generated on $(date '+%A, %B %d, %Y at %H:%M')</span></a></li>"
            REPORT_ITEMS="$REPORT_ITEMS$LATEST_ITEM"

            # Append previous runs — using a subshell-safe method
            while read dir; do
              dir_name=$(basename "$dir")
              if [[ "$dir_name" != "$REPORT_DIR" ]]; then
                ITEM="<li><a href=\"./$dir_name/index.html\">Run: $dir_name <span class=\"date\">Generated on $dir_name</span></a></li>"
                REPORT_ITEMS="$REPORT_ITEMS$ITEM"
              fi
            done <<< "$DIRS"

            # Replace the placeholder in the template with the actual items
            sed "s|<!-- REPORT_ITEMS -->|$REPORT_ITEMS|g" index.html.template > index.html
            
            # Clean up
            rm index.html.template

      - name: 🚀 Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: gh-pages
          publish_branch: gh-pages
          enable_jekyll: false
          keep_files: true

      - name: 🔗 Add report URL to summary
        run: |
          echo "## ✅ Test Report Available" >> $GITHUB_STEP_SUMMARY
          echo "[Open Latest Report 🔍](https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/${{ needs.tests.outputs.report_dir }}/)" >> $GITHUB_STEP_SUMMARY
          echo "[View All Reports](https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/)" >> $GITHUB_STEP_SUMMARY

          