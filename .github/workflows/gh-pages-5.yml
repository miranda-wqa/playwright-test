name: Deploy Acceptance Test Reports

on:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  contents: read
  actions: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Download and Organize Reports
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Create base directory
          mkdir -p artifact-index/reports
          
          # Fetch all artifacts
          echo "Fetching artifacts..."
          gh api --paginate /repos/${{ github.repository }}/actions/artifacts > raw_artifacts.json
          
          # Download and organize artifacts
          echo "Downloading and organizing artifacts..."
          gh api --paginate /repos/${{ github.repository }}/actions/artifacts | \
          jq -s '
            add | 
            .artifacts[] | 
            select(.name == "report-folder" and .expired == false) | 
            {
              branch: .workflow_run.head_branch,
              run_number: .workflow_run.run_number,
              run_id: .workflow_run.id,
              created_at: .created_at,
              download_url: .archive_download_url
            }
          ' | \
          jq -r '.[] | "\(.branch) \(.run_number) \(.run_id) \(.created_at) \(.download_url)"' | \
          while read branch run_number run_id created_at url; do
            # Create directory for this run
            run_dir="artifact-index/reports/$branch/$run_number"
            mkdir -p "$run_dir"
            
            # Download and extract the artifact
            echo "Downloading report for branch $branch, run $run_number..."
            curl -L -H "Authorization: token $GH_TOKEN" "$url" > "$run_dir/report.zip"
            
            # Extract the report
            unzip -o "$run_dir/report.zip" -d "$run_dir"
            
            # Clean up the zip file
            rm "$run_dir/report.zip"
            
            # Create a metadata file
            echo "{
              \"branch\": \"$branch\",
              \"run_number\": \"$run_number\",
              \"run_id\": \"$run_id\",
              \"created_at\": \"$created_at\"
            }" > "$run_dir/metadata.json"
          done

      - name: Generate Index Page
        run: |
          # Create index page with styling
          cat > artifact-index/index.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
            <title>Acceptance Test Reports</title>
            <style>
              body { font-family: Arial, sans-serif; margin: 20px; }
              h1 { color: #333; }
              h2 { color: #666; margin-top: 20px; }
              ul { list-style-type: none; padding: 0; }
              li { margin: 10px 0; }
              a { color: #0366d6; text-decoration: none; }
              a:hover { text-decoration: underline; }
              .run-info { color: #666; font-size: 0.9em; }
            </style>
          </head>
          <body>
            <h1>Acceptance Test Reports</h1>
          EOF

          # Generate index content based on directory structure
          for branch_dir in artifact-index/reports/*/; do
            branch=$(basename "$branch_dir")
            echo "<h2>Branch: $branch</h2><ul>" >> artifact-index/index.html
            
            # Sort runs by run number in descending order
            for run_dir in $(ls -v -r "$branch_dir"); do
              if [ -f "$branch_dir/$run_dir/metadata.json" ]; then
                run_number=$(jq -r '.run_number' "$branch_dir/$run_dir/metadata.json")
                run_id=$(jq -r '.run_id' "$branch_dir/$run_dir/metadata.json")
                created_at=$(jq -r '.created_at' "$branch_dir/$run_dir/metadata.json")
                
                echo "<li>" >> artifact-index/index.html
                echo "<a href=\"reports/$branch/$run_dir/index.html\">Run #$run_number</a> " >> artifact-index/index.html
                echo "<span class=\"run-info\">(ID: $run_id, Created: $created_at)</span>" >> artifact-index/index.html
                echo "</li>" >> artifact-index/index.html
              fi
            done
            
            echo "</ul>" >> artifact-index/index.html
          done

          echo "</body></html>" >> artifact-index/index.html
          
          # Debug: Show the directory structure
          echo "Generated directory structure:"
          find artifact-index -type d

      - name: Upload Pages Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: artifact-index

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
