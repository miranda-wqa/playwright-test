name: Deploy Acceptance Test Reports

on:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  contents: read
  actions: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Generate Index Page
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mkdir -p artifact-index
          echo "<html><body><h1>Acceptance Test Artifacts</h1>" > artifact-index/index.html

          # Debug: Save raw API response
          echo "Fetching artifacts..."
          gh api --paginate /repos/${{ github.repository }}/actions/artifacts > raw_artifacts.json
          
          # Debug: Show raw response structure
          echo "Raw response structure:"
          jq 'keys' raw_artifacts.json
          
          # Debug: Check if we have any artifacts
          echo "Checking for artifacts..."
          jq '.artifacts | length' raw_artifacts.json
          
          # Debug: List all artifact names
          echo "Artifact names found:"
          jq '.artifacts[].name' raw_artifacts.json
          
          # Debug: Show full artifact details
          echo "Full artifact details:"
          jq '.artifacts[] | {name, expired, workflow_run: .workflow_run.head_branch}' raw_artifacts.json
          
          # Process artifacts with intermediate debug output
          echo "Processing artifacts..."
          gh api --paginate /repos/${{ github.repository }}/actions/artifacts | \
          jq -s '
            add | 
            .artifacts[] | 
            select(.name == "report-folder" and .expired == false) | 
            {name, branch: .workflow_run.head_branch, id: .id, archive_download_url}
          ' > filtered_artifacts.json
          
          # Debug: Show filtered artifacts
          echo "Filtered artifacts:"
          cat filtered_artifacts.json
          
          # Generate HTML from filtered artifacts
          cat filtered_artifacts.json | \
          jq -s '
            group_by(.branch) | 
            .[] as $branch_group |
              "<h2>Branch: \($branch_group[0].branch)</h2><ul>" +
              ($branch_group | map("<li><a href=\"" + .archive_download_url + "\">Artifact #\(.id)</a></li>") | join("")) +
              "</ul>"
          ' >> artifact-index/index.html

          echo "</body></html>" >> artifact-index/index.html
          
          # Debug: Show final HTML
          echo "Generated HTML:"
          cat artifact-index/index.html
          
          # Debug: Check file permissions and contents
          echo "Checking artifact-index directory:"
          ls -la artifact-index/
          echo "File size of index.html:"
          wc -l artifact-index/index.html
          echo "First few lines of index.html:"
          head -n 5 artifact-index/index.html

      - name: Upload Pages Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: artifact-index
        continue-on-error: true

      - name: Debug Upload
        run: |
          echo "Checking if artifact-index still exists after upload:"
          ls -la artifact-index/
          echo "Contents of index.html after upload:"
          cat artifact-index/index.html

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
