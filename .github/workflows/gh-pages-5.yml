name: Deploy Acceptance Test Reports

on:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  contents: read
  actions: read
  pages: write
  id-token: write


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Install GitHub CLI
        run: |
          type -p curl >/dev/null || apt install curl -y
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
          && sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
          && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
          && sudo apt update \
          && sudo apt install gh -y

      - name: Fetch Artifacts Data
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
        run: |
          # Create site directory
          mkdir -p _site
          
          # Fetch non-expired artifacts named 'report-folder'
          gh api --paginate "/repos/$REPO/actions/artifacts?per_page=100" | \
          jq -s '[.[].artifacts[] | select((.name=="report-folder") and (.expired==false))]' > all_artifacts.json
          
          # Limit to latest 50
          jq 'sort_by(.created_at) | reverse | .[0:50]' all_artifacts.json > latest_artifacts.json
          
          # Transform into desired structure
          jq 'group_by(.workflow_run.head_branch) | map({
            branch: .[0].workflow_run.head_branch,
            workflow_runs: map({
              workflow_run_id: .workflow_run.id,
              created_at: .created_at,
              artifact_id: .id
            })
          })' latest_artifacts.json > _site/report_structure.json
          
          # Show what we got
          echo "Generated report structure:"
          cat _site/report_structure.json

      - name: Generate Simple Index
        run: |
          cat > _site/index.html << 'EOL'
          <!DOCTYPE html>
          <html>
          <head>
            <title>Test Reports</title>
            <style>
              body { font-family: sans-serif; margin: 20px; }
              h1 { color: #0366d6; }
              .branch { margin-bottom: 20px; }
              .branch-name { font-weight: bold; }
            </style>
          </head>
          <body>
            <h1>Test Reports</h1>
            <div id="content">Loading...</div>
            
            <script>
              fetch('./report_structure.json')
                .then(response => response.json())
                .then(data => {
                  const content = document.getElementById('content');
                  content.innerHTML = '';
                  
                  data.forEach(branch => {
                    const branchDiv = document.createElement('div');
                    branchDiv.className = 'branch';
                    
                    branchDiv.innerHTML = `
                      <div class="branch-name">${branch.branch}</div>
                      <ul>
                        ${branch.workflow_runs.map(run => {
                          const date = new Date(run.created_at).toLocaleString();
                          return `<li>Run ID: ${run.workflow_run_id} (${date})</li>`;
                        }).join('')}
                      </ul>
                    `;
                    
                    content.appendChild(branchDiv);
                  });
                })
                .catch(error => {
                  document.getElementById('content').innerHTML = 'Error loading data: ' + error.message;
                });
            </script>
          </body>
          </html>
          EOL

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3
