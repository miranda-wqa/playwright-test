name: Deploy Test Reports to GitHub Pages

on:
  workflow_dispatch:  # Manual trigger
  push:
    branches:
      - main
  workflow_run:
    workflows: ["gh-pages-5.yml"]
    types:
      - completed

permissions:
  contents: read
  pages: write
  id-token: write
  actions: read

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Install GitHub CLI
        run: |
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt update
          sudo apt install gh -y

      - name: Fetch and Process Artifacts
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
        run: |
          # Create site directory
          mkdir -p _site
          
          # Use the "magic sauce" to fetch artifacts
          echo "Fetching artifacts data..."
          gh api --paginate "/repos/$REPO/actions/artifacts" | \
          jq -s '[.[].artifacts[] | select((.name=="report-folder") and (.expired==false))]' > all_artifacts.json
          
          # Get the latest 50 artifacts
          jq 'sort_by(.created_at) | reverse | .[0:50]' all_artifacts.json > latest_artifacts.json
          
          # Group by branch as specified in the example
          jq 'group_by(.workflow_run.head_branch) | sort_by(.[].id) | reverse' latest_artifacts.json > grouped_artifacts.json
          
          # Transform to the desired structure
          jq '[.[] | {
            branch: .[0].workflow_run.head_branch,
            workflow_runs: [.[] | {
              workflow_run_id: .workflow_run.id,
              created_at: .created_at,
              artifact_id: .id
            }]
          }]' grouped_artifacts.json > _site/report_structure.json
          
          # Create a simple index.html for navigation
          cat > _site/index.html << 'EOL'
          <!DOCTYPE html>
          <html>
          <head>
            <title>Test Reports</title>
            <style>
              body { font-family: sans-serif; margin: 20px; }
              h1 { color: #0366d6; text-align: center; }
              .branch { margin-bottom: 20px; border: 1px solid #ddd; padding: 10px; border-radius: 5px; }
              .branch-header { font-weight: bold; font-size: 16px; margin-bottom: 10px; }
              .run-link { display: block; padding: 5px; margin: 2px 0; text-decoration: none; }
              .run-link:hover { background-color: #f0f0f0; }
            </style>
          </head>
          <body>
            <h1>Test Reports</h1>
            <div id="content">Loading reports...</div>
            
            <script>
              fetch('./report_structure.json')
                .then(response => response.json())
                .then(data => {
                  const content = document.getElementById('content');
                  content.innerHTML = '';
                  
                  data.forEach(branch => {
                    const branchDiv = document.createElement('div');
                    branchDiv.className = 'branch';
                    
                    const branchHeader = document.createElement('div');
                    branchHeader.className = 'branch-header';
                    branchHeader.textContent = 'Branch: ' + branch.branch;
                    
                    branchDiv.appendChild(branchHeader);
                    
                    branch.workflow_runs.forEach(run => {
                      const date = new Date(run.created_at).toLocaleString();
                      const runId = run.workflow_run_id;
                      
                      const link = document.createElement('a');
                      link.className = 'run-link';
                      link.href = `${branch.branch}/${run.created_at.replace(/:/g, '-').replace(/Z$/, '')}_${runId}/`;
                      link.textContent = `Run ID: ${runId} - ${date}`;
                      
                      branchDiv.appendChild(link);
                    });
                    
                    content.appendChild(branchDiv);
                  });
                })
                .catch(error => {
                  document.getElementById('content').innerHTML = 'Error loading data: ' + error.message;
                });
            </script>
          </body>
          </html>
          EOL
          
          # Process and download each artifact
          echo "Downloading artifacts..."
          jq -c '.[]' _site/report_structure.json | while read -r branch_data; do
            branch_name=$(echo $branch_data | jq -r '.branch')
            mkdir -p "_site/$branch_name"
            
            echo "Processing branch: $branch_name"
            
            echo $branch_data | jq -c '.workflow_runs[]' | while read -r run_data; do
              run_id=$(echo $run_data | jq -r '.workflow_run_id')
              artifact_id=$(echo $run_data | jq -r '.artifact_id')
              created_at=$(echo $run_data | jq -r '.created_at' | sed 's/:/-/g' | sed 's/Z$//')
              
              dir_name="${created_at}_${run_id}"
              mkdir -p "_site/$branch_name/$dir_name"
              
              echo "Downloading artifact $artifact_id for run $run_id"
              
              # Download the artifact zip
              gh api "/repos/$REPO/actions/artifacts/$artifact_id/zip" \
                -H "Accept: application/vnd.github+json" \
                --output "artifact.zip"
              
              # Extract to the directory
              unzip -q -o "artifact.zip" -d "_site/$branch_name/$dir_name"
              rm "artifact.zip"
            done
          done
          
          # Show directory structure
          echo "Created directory structure:"
          find _site -type d | sort

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3
        