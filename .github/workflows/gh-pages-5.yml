name: Deploy Test Reports to GitHub Pages

on:
  workflow_dispatch:  # Manual trigger
  push:
    branches:
      - main

permissions:
  contents: read
  pages: write
  id-token: write
  actions: read

jobs:
  fetch-reports:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/configure-pages@v4
      
      - name: Fetch and Process Artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
        run: |
          # Create site directory
          mkdir -p _site
          
          # Install GitHub CLI
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt update
          sudo apt install gh -y
          
          # Fetch artifacts using the "magic sauce" command
          echo "Fetching artifacts data..."
          gh api --paginate "/repos/$REPO/actions/artifacts" | \
          jq -s '[.[].artifacts[] | select((.name=="report-folder") and (.expired==false))]' > filtered_artifacts.json
          
          # Limit to latest 50 and sort
          jq 'sort_by(.created_at) | reverse | .[0:50]' filtered_artifacts.json > latest_artifacts.json
          
          # Group by branch
          jq 'group_by(.workflow_run.head_branch)' latest_artifacts.json > grouped_artifacts.json
          
          # Transform to the desired structure
          jq '[.[] | {
            branch: .[0].workflow_run.head_branch,
            workflow_runs: [.[] | {
              workflow_run_id: .workflow_run.id,
              created_at: .created_at,
              artifact_id: .id
            }]
          }]' grouped_artifacts.json > _site/report_structure.json
          
          # Download and organize artifacts
          echo "Downloading artifacts..."
          jq -c '.[]' _site/report_structure.json | while read -r branch_data; do
            branch_name=$(echo $branch_data | jq -r '.branch')
            mkdir -p "_site/$branch_name"
            
            echo "Processing branch: $branch_name"
            
            echo $branch_data | jq -c '.workflow_runs[]' | while read -r run_data; do
              run_id=$(echo $run_data | jq -r '.workflow_run_id')
              artifact_id=$(echo $run_data | jq -r '.artifact_id')
              created_at=$(echo $run_data | jq -r '.created_at' | sed 's/:/-/g' | sed 's/Z$//')
              
              dir_name="${created_at}_${run_id}"
              mkdir -p "_site/$branch_name/$dir_name"
              
              echo "Downloading artifact $artifact_id for run $run_id"
              
              # Download and extract the artifact
              gh api "/repos/$REPO/actions/artifacts/$artifact_id/zip" \
                -H "Accept: application/vnd.github+json" \
                --output "artifact.zip"
              
              unzip -q -o "artifact.zip" -d "_site/$branch_name/$dir_name"
              rm "artifact.zip"
            done
          done
          
          # Create a simple placeholder index.html
          echo "<html><body><h1>Test Reports</h1><p>Reports fetched and organized.</p></body></html>" > _site/index.html
          
          # Show the directory structure
          echo "Created site structure:"
          find _site -type d | sort
      
      - uses: actions/upload-pages-artifact@v2
      
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v3
